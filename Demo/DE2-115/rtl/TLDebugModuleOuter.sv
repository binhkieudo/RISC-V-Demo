// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module TLDebugModuleOuter(
  input         clock,
                reset,
                auto_dmi_in_a_valid,
  input  [2:0]  auto_dmi_in_a_bits_opcode,
  input  [6:0]  auto_dmi_in_a_bits_address,
  input  [31:0] auto_dmi_in_a_bits_data,
  input         auto_dmi_in_d_ready,
                io_ctrl_dmactiveAck,
                io_innerCtrl_ready,
                io_hgDebugInt_0,
                io_hgDebugInt_1,
                io_hgDebugInt_2,
                io_hgDebugInt_3,
  output        auto_dmi_in_a_ready,
                auto_dmi_in_d_valid,
  output [31:0] auto_dmi_in_d_bits_data,
  output        auto_int_out_3_0,
                auto_int_out_2_0,
                auto_int_out_1_0,
                auto_int_out_0_0,
                io_ctrl_dmactive,
                io_innerCtrl_valid,
                io_innerCtrl_bits_resumereq,
  output [9:0]  io_innerCtrl_bits_hartsel,
  output        io_innerCtrl_bits_ackhavereset,
                io_innerCtrl_bits_hasel,
                io_innerCtrl_bits_hamask_0,
                io_innerCtrl_bits_hamask_1,
                io_innerCtrl_bits_hamask_2,
                io_innerCtrl_bits_hamask_3,
                io_innerCtrl_bits_hrmask_0,
                io_innerCtrl_bits_hrmask_1,
                io_innerCtrl_bits_hrmask_2,
                io_innerCtrl_bits_hrmask_3
);

  wire             _io_innerCtrl_bits_hasel_output;	// @[Debug.scala:642:42]
  wire [9:0]       _io_innerCtrl_bits_hartsel_output;	// @[Debug.scala:637:42]
  wire             out_woready_13;	// @[RegisterRouter.scala:83:24]
  wire             out_woready_12;	// @[RegisterRouter.scala:83:24]
  wire             DMCONTROLWrData_setresethaltreq;	// @[RegisterRouter.scala:83:24]
  wire             DMCONTROLWrData_clrresethaltreq;	// @[RegisterRouter.scala:83:24]
  reg              DMCONTROLReg_haltreq;	// @[Debug.scala:374:31]
  reg              DMCONTROLReg_hasel;	// @[Debug.scala:374:31]
  reg  [9:0]       DMCONTROLReg_hartsello;	// @[Debug.scala:374:31]
  reg              DMCONTROLReg_ndmreset;	// @[Debug.scala:374:31]
  reg              DMCONTROLReg_dmactive;	// @[Debug.scala:374:31]
  reg  [31:0]      HAMASKReg_maskdata;	// @[Debug.scala:472:32]
  wire             hamask_0 = out_woready_13 ? auto_dmi_in_a_bits_data[0] : HAMASKReg_maskdata[0];	// @[Debug.scala:472:32, :490:54, :491:48, :492:74, :493:44, :495:44, RegisterRouter.scala:83:24]
  wire             hamask_1 = out_woready_13 ? auto_dmi_in_a_bits_data[1] : HAMASKReg_maskdata[1];	// @[Debug.scala:472:32, :490:54, :491:48, :492:74, :493:44, :495:44, RegisterRouter.scala:83:24]
  wire             hamask_2 = out_woready_13 ? auto_dmi_in_a_bits_data[2] : HAMASKReg_maskdata[2];	// @[Debug.scala:472:32, :490:54, :491:48, :492:74, :493:44, :495:44, RegisterRouter.scala:83:24]
  wire             hamask_3 = out_woready_13 ? auto_dmi_in_a_bits_data[3] : HAMASKReg_maskdata[3];	// @[Debug.scala:472:32, :490:54, :491:48, :492:74, :493:44, :495:44, RegisterRouter.scala:83:24]
  reg              hrmaskReg_0;	// @[Debug.scala:514:28]
  reg              hrmaskReg_1;	// @[Debug.scala:514:28]
  reg              hrmaskReg_2;	// @[Debug.scala:514:28]
  reg              hrmaskReg_3;	// @[Debug.scala:514:28]
  wire             _T_33 = _io_innerCtrl_bits_hartsel_output == 10'h0;	// @[Debug.scala:372:47, :441:35, :637:42]
  wire             _T_34 = _io_innerCtrl_bits_hasel_output & hamask_0;	// @[Debug.scala:442:56, :492:74, :493:44, :495:44, :642:42]
  wire             hrmaskNxt_0 = ~(~DMCONTROLReg_dmactive | out_woready_12 & DMCONTROLWrData_clrresethaltreq & (_T_33 | _T_34)) & (out_woready_12 & DMCONTROLWrData_setresethaltreq & (_T_33 | _T_34) | hrmaskReg_0);	// @[Debug.scala:374:31, :393:11, :441:{35,47}, :442:56, :514:28, :516:15, :518:44, :519:30, :520:{74,102}, :521:30, :522:{74,102}, :523:30, RegisterRouter.scala:83:24]
  wire             _T_46 = _io_innerCtrl_bits_hartsel_output == 10'h1;	// @[Debug.scala:441:35, :637:42]
  wire             _T_47 = _io_innerCtrl_bits_hasel_output & hamask_1;	// @[Debug.scala:442:56, :492:74, :493:44, :495:44, :642:42]
  wire             hrmaskNxt_1 = ~(~DMCONTROLReg_dmactive | out_woready_12 & DMCONTROLWrData_clrresethaltreq & (_T_46 | _T_47)) & (out_woready_12 & DMCONTROLWrData_setresethaltreq & (_T_46 | _T_47) | hrmaskReg_1);	// @[Debug.scala:374:31, :393:11, :441:{35,47}, :442:56, :514:28, :516:15, :518:44, :519:30, :520:{74,102}, :521:30, :522:{74,102}, :523:30, RegisterRouter.scala:83:24]
  wire             _T_59 = _io_innerCtrl_bits_hartsel_output == 10'h2;	// @[Debug.scala:441:35, :637:42]
  wire             _T_60 = _io_innerCtrl_bits_hasel_output & hamask_2;	// @[Debug.scala:442:56, :492:74, :493:44, :495:44, :642:42]
  wire             hrmaskNxt_2 = ~(~DMCONTROLReg_dmactive | out_woready_12 & DMCONTROLWrData_clrresethaltreq & (_T_59 | _T_60)) & (out_woready_12 & DMCONTROLWrData_setresethaltreq & (_T_59 | _T_60) | hrmaskReg_2);	// @[Debug.scala:374:31, :393:11, :441:{35,47}, :442:56, :514:28, :516:15, :518:44, :519:30, :520:{74,102}, :521:30, :522:{74,102}, :523:30, RegisterRouter.scala:83:24]
  wire             _T_72 = _io_innerCtrl_bits_hartsel_output == 10'h3;	// @[Debug.scala:397:104, :441:35, :637:42]
  wire             _T_73 = _io_innerCtrl_bits_hasel_output & hamask_3;	// @[Debug.scala:442:56, :492:74, :493:44, :495:44, :642:42]
  wire             hrmaskNxt_3 = ~(~DMCONTROLReg_dmactive | out_woready_12 & DMCONTROLWrData_clrresethaltreq & (_T_72 | _T_73)) & (out_woready_12 & DMCONTROLWrData_setresethaltreq & (_T_72 | _T_73) | hrmaskReg_3);	// @[Debug.scala:374:31, :393:11, :441:{35,47}, :442:56, :514:28, :516:15, :518:44, :519:30, :520:{74,102}, :521:30, :522:{74,102}, :523:30, RegisterRouter.scala:83:24]
  assign DMCONTROLWrData_clrresethaltreq = auto_dmi_in_a_bits_data[2];	// @[RegisterRouter.scala:83:24]
  assign DMCONTROLWrData_setresethaltreq = auto_dmi_in_a_bits_data[3];	// @[RegisterRouter.scala:83:24]
  wire             _out_wofireMux_T_2 = auto_dmi_in_a_valid & auto_dmi_in_d_ready & auto_dmi_in_a_bits_opcode != 3'h4;	// @[RegisterRouter.scala:72:36, :83:24]
  assign out_woready_12 = _out_wofireMux_T_2 & auto_dmi_in_a_bits_address[4:3] == 2'h0 & ~(auto_dmi_in_a_bits_address[2]);	// @[Cat.scala:33:92, Edges.scala:192:34, OneHot.scala:57:35, RegisterRouter.scala:73:19, :83:24]
  assign out_woready_13 = _out_wofireMux_T_2 & auto_dmi_in_a_bits_address[4:3] == 2'h2 & auto_dmi_in_a_bits_address[2];	// @[Cat.scala:33:92, Edges.scala:192:34, OneHot.scala:57:35, RegisterRouter.scala:73:19, :83:24]
  wire [3:0]       _GEN = {{1'h1}, {auto_dmi_in_a_bits_address[2]}, {~(auto_dmi_in_a_bits_address[2])}, {~(auto_dmi_in_a_bits_address[2])}};	// @[Edges.scala:192:34, MuxLiteral.scala:49:10, RegisterRouter.scala:73:19, :83:24]
  wire [3:0][31:0] _GEN_0 = {{32'h0}, {{28'h0, HAMASKReg_maskdata[3:0]}}, {32'h118380}, {{DMCONTROLReg_haltreq, 4'h0, DMCONTROLReg_hasel, 8'h0, DMCONTROLReg_hartsello[1:0], 14'h0, DMCONTROLReg_ndmreset, DMCONTROLReg_dmactive & io_ctrl_dmactiveAck}}};	// @[Cat.scala:33:92, Debug.scala:305:12, :374:31, :435:47, :441:35, :472:32, :529:43, MuxLiteral.scala:49:{10,48}, RegisterRouter.scala:83:24]
  reg              debugIntRegs_0;	// @[Debug.scala:595:31]
  reg              debugIntRegs_1;	// @[Debug.scala:595:31]
  reg              debugIntRegs_2;	// @[Debug.scala:595:31]
  reg              debugIntRegs_3;	// @[Debug.scala:595:31]
  reg              innerCtrlValidReg;	// @[Debug.scala:625:36]
  reg              innerCtrlResumeReqReg;	// @[Debug.scala:626:40]
  reg              innerCtrlAckHaveResetReg;	// @[Debug.scala:627:43]
  wire             _io_innerCtrl_valid_output = out_woready_12 | out_woready_13 | innerCtrlValidReg;	// @[Debug.scala:625:36, :636:54, RegisterRouter.scala:83:24]
  assign _io_innerCtrl_bits_hartsel_output = out_woready_12 ? {8'h0, auto_dmi_in_a_bits_data[17:16]} : DMCONTROLReg_hartsello;	// @[Debug.scala:305:12, :374:31, :441:35, :637:42, RegisterRouter.scala:83:24]
  wire             _io_innerCtrl_bits_resumereq_output = out_woready_12 & auto_dmi_in_a_bits_data[30] | innerCtrlResumeReqReg;	// @[Debug.scala:626:40, :638:{54,83}, RegisterRouter.scala:83:24]
  wire             _io_innerCtrl_bits_ackhavereset_output = out_woready_12 & auto_dmi_in_a_bits_data[28] | innerCtrlAckHaveResetReg;	// @[Debug.scala:627:43, :639:{57,89}, RegisterRouter.scala:83:24]
  assign _io_innerCtrl_bits_hasel_output = out_woready_12 ? auto_dmi_in_a_bits_data[26] : DMCONTROLReg_hasel;	// @[Debug.scala:374:31, :642:42, RegisterRouter.scala:83:24]
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      DMCONTROLReg_haltreq <= 1'h0;	// @[Debug.scala:374:31]
      DMCONTROLReg_hasel <= 1'h0;	// @[Debug.scala:374:31]
      DMCONTROLReg_hartsello <= 10'h0;	// @[Debug.scala:372:47, :374:31]
      DMCONTROLReg_ndmreset <= 1'h0;	// @[Debug.scala:374:31]
      DMCONTROLReg_dmactive <= 1'h0;	// @[Debug.scala:374:31]
      HAMASKReg_maskdata <= 32'h0;	// @[Debug.scala:435:47, :472:32]
      hrmaskReg_0 <= 1'h0;	// @[Debug.scala:514:28]
      hrmaskReg_1 <= 1'h0;	// @[Debug.scala:514:28]
      hrmaskReg_2 <= 1'h0;	// @[Debug.scala:514:28]
      hrmaskReg_3 <= 1'h0;	// @[Debug.scala:514:28]
      debugIntRegs_0 <= 1'h0;	// @[Debug.scala:595:31]
      debugIntRegs_1 <= 1'h0;	// @[Debug.scala:595:31]
      debugIntRegs_2 <= 1'h0;	// @[Debug.scala:595:31]
      debugIntRegs_3 <= 1'h0;	// @[Debug.scala:595:31]
      innerCtrlValidReg <= 1'h0;	// @[Debug.scala:625:36]
      innerCtrlResumeReqReg <= 1'h0;	// @[Debug.scala:626:40]
      innerCtrlAckHaveResetReg <= 1'h0;	// @[Debug.scala:627:43]
    end
    else begin
      DMCONTROLReg_haltreq <= DMCONTROLReg_dmactive & (out_woready_12 ? auto_dmi_in_a_bits_data[31] : DMCONTROLReg_haltreq);	// @[Debug.scala:374:31, :392:18, :393:22, :394:20, :400:{47,75}, RegisterRouter.scala:83:24]
      DMCONTROLReg_hasel <= DMCONTROLReg_dmactive & (out_woready_12 ? auto_dmi_in_a_bits_data[26] : DMCONTROLReg_hasel);	// @[Debug.scala:374:31, :392:18, :393:22, :394:20, :398:{47,75}, RegisterRouter.scala:83:24]
      if (DMCONTROLReg_dmactive) begin	// @[Debug.scala:374:31]
        if (out_woready_12)	// @[RegisterRouter.scala:83:24]
          DMCONTROLReg_hartsello <= {8'h0, auto_dmi_in_a_bits_data[17:16]};	// @[Debug.scala:305:12, :374:31, :441:35, RegisterRouter.scala:83:24]
      end
      else	// @[Debug.scala:374:31]
        DMCONTROLReg_hartsello <= 10'h0;	// @[Debug.scala:372:47, :374:31]
      DMCONTROLReg_ndmreset <= DMCONTROLReg_dmactive & (out_woready_12 ? auto_dmi_in_a_bits_data[1] : DMCONTROLReg_ndmreset);	// @[Debug.scala:374:31, :392:18, :393:22, :394:20, :396:{47,75}, RegisterRouter.scala:83:24]
      if (out_woready_12)	// @[RegisterRouter.scala:83:24]
        DMCONTROLReg_dmactive <= auto_dmi_in_a_bits_data[0];	// @[Debug.scala:374:31, RegisterRouter.scala:83:24]
      if (DMCONTROLReg_dmactive) begin	// @[Debug.scala:374:31]
        if (out_woready_13)	// @[RegisterRouter.scala:83:24]
          HAMASKReg_maskdata <= {28'h0, auto_dmi_in_a_bits_data[3:0]};	// @[Debug.scala:305:12, :472:32, RegisterRouter.scala:83:24]
      end
      else	// @[Debug.scala:374:31]
        HAMASKReg_maskdata <= 32'h0;	// @[Debug.scala:435:47, :472:32]
      hrmaskReg_0 <= hrmaskNxt_0;	// @[Debug.scala:514:28, :518:44, :519:30, :520:102, :521:30, :522:102]
      hrmaskReg_1 <= hrmaskNxt_1;	// @[Debug.scala:514:28, :518:44, :519:30, :520:102, :521:30, :522:102]
      hrmaskReg_2 <= hrmaskNxt_2;	// @[Debug.scala:514:28, :518:44, :519:30, :520:102, :521:30, :522:102]
      hrmaskReg_3 <= hrmaskNxt_3;	// @[Debug.scala:514:28, :518:44, :519:30, :520:102, :521:30, :522:102]
      debugIntRegs_0 <= DMCONTROLReg_dmactive & (out_woready_12 & (auto_dmi_in_a_bits_data[17:16] == 2'h0 | auto_dmi_in_a_bits_data[26] & hamask_0) ? auto_dmi_in_a_bits_data[31] : debugIntRegs_0);	// @[Debug.scala:374:31, :492:74, :493:44, :495:44, :595:31, :597:17, :605:44, :606:32, :608:{27,58}, :609:{11,59,96}, :610:34, OneHot.scala:57:35, RegisterRouter.scala:83:24]
      debugIntRegs_1 <= DMCONTROLReg_dmactive & (out_woready_12 & (auto_dmi_in_a_bits_data[17:16] == 2'h1 | auto_dmi_in_a_bits_data[26] & hamask_1) ? auto_dmi_in_a_bits_data[31] : debugIntRegs_1);	// @[Debug.scala:374:31, :441:35, :492:74, :493:44, :495:44, :595:31, :597:17, :605:44, :606:32, :608:{27,58}, :609:{11,59,96}, :610:34, RegisterRouter.scala:83:24]
      debugIntRegs_2 <= DMCONTROLReg_dmactive & (out_woready_12 & (auto_dmi_in_a_bits_data[17:16] == 2'h2 | auto_dmi_in_a_bits_data[26] & hamask_2) ? auto_dmi_in_a_bits_data[31] : debugIntRegs_2);	// @[Debug.scala:374:31, :492:74, :493:44, :495:44, :595:31, :597:17, :605:44, :606:32, :608:{27,58}, :609:{11,59,96}, :610:34, OneHot.scala:57:35, RegisterRouter.scala:83:24]
      debugIntRegs_3 <= DMCONTROLReg_dmactive & (out_woready_12 & ((&(auto_dmi_in_a_bits_data[17:16])) | auto_dmi_in_a_bits_data[26] & hamask_3) ? auto_dmi_in_a_bits_data[31] : debugIntRegs_3);	// @[Debug.scala:374:31, :492:74, :493:44, :495:44, :595:31, :597:17, :605:44, :606:32, :608:{27,58}, :609:{11,59,96}, :610:34, RegisterRouter.scala:83:24]
      innerCtrlValidReg <= _io_innerCtrl_valid_output & ~io_innerCtrl_ready;	// @[Debug.scala:625:36, :632:{52,54}, :636:54]
      innerCtrlResumeReqReg <= _io_innerCtrl_bits_resumereq_output & ~io_innerCtrl_ready;	// @[Debug.scala:626:40, :632:54, :633:61, :638:83]
      innerCtrlAckHaveResetReg <= _io_innerCtrl_bits_ackhavereset_output & ~io_innerCtrl_ready;	// @[Debug.scala:627:43, :632:54, :634:64, :639:89]
    end
  end // always @(posedge, posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        DMCONTROLReg_haltreq = _RANDOM_0[0];	// @[Debug.scala:374:31]
        DMCONTROLReg_hasel = _RANDOM_0[5];	// @[Debug.scala:374:31]
        DMCONTROLReg_hartsello = _RANDOM_0[15:6];	// @[Debug.scala:374:31]
        DMCONTROLReg_ndmreset = _RANDOM_0[30];	// @[Debug.scala:374:31]
        DMCONTROLReg_dmactive = _RANDOM_0[31];	// @[Debug.scala:374:31]
        HAMASKReg_maskdata = _RANDOM_2;	// @[Debug.scala:472:32]
        hrmaskReg_0 = _RANDOM_3[0];	// @[Debug.scala:514:28]
        hrmaskReg_1 = _RANDOM_3[1];	// @[Debug.scala:514:28]
        hrmaskReg_2 = _RANDOM_3[2];	// @[Debug.scala:514:28]
        hrmaskReg_3 = _RANDOM_3[3];	// @[Debug.scala:514:28]
        debugIntRegs_0 = _RANDOM_3[4];	// @[Debug.scala:514:28, :595:31]
        debugIntRegs_1 = _RANDOM_3[5];	// @[Debug.scala:514:28, :595:31]
        debugIntRegs_2 = _RANDOM_3[6];	// @[Debug.scala:514:28, :595:31]
        debugIntRegs_3 = _RANDOM_3[7];	// @[Debug.scala:514:28, :595:31]
        innerCtrlValidReg = _RANDOM_3[8];	// @[Debug.scala:514:28, :625:36]
        innerCtrlResumeReqReg = _RANDOM_3[9];	// @[Debug.scala:514:28, :626:40]
        innerCtrlAckHaveResetReg = _RANDOM_3[10];	// @[Debug.scala:514:28, :627:43]
      `endif // RANDOMIZE_REG_INIT
      `ifdef RANDOMIZE
        if (reset) begin
          DMCONTROLReg_haltreq = 1'h0;	// @[Debug.scala:374:31]
          DMCONTROLReg_hasel = 1'h0;	// @[Debug.scala:374:31]
          DMCONTROLReg_hartsello = 10'h0;	// @[Debug.scala:372:47, :374:31]
          DMCONTROLReg_ndmreset = 1'h0;	// @[Debug.scala:374:31]
          DMCONTROLReg_dmactive = 1'h0;	// @[Debug.scala:374:31]
          HAMASKReg_maskdata = 32'h0;	// @[Debug.scala:435:47, :472:32]
          hrmaskReg_0 = 1'h0;	// @[Debug.scala:514:28]
          hrmaskReg_1 = 1'h0;	// @[Debug.scala:514:28]
          hrmaskReg_2 = 1'h0;	// @[Debug.scala:514:28]
          hrmaskReg_3 = 1'h0;	// @[Debug.scala:514:28]
          debugIntRegs_0 = 1'h0;	// @[Debug.scala:595:31]
          debugIntRegs_1 = 1'h0;	// @[Debug.scala:595:31]
          debugIntRegs_2 = 1'h0;	// @[Debug.scala:595:31]
          debugIntRegs_3 = 1'h0;	// @[Debug.scala:595:31]
          innerCtrlValidReg = 1'h0;	// @[Debug.scala:625:36]
          innerCtrlResumeReqReg = 1'h0;	// @[Debug.scala:626:40]
          innerCtrlAckHaveResetReg = 1'h0;	// @[Debug.scala:627:43]
        end
      `endif // RANDOMIZE
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign auto_dmi_in_a_ready = auto_dmi_in_d_ready;
  assign auto_dmi_in_d_valid = auto_dmi_in_a_valid;
  assign auto_dmi_in_d_bits_data = _GEN[auto_dmi_in_a_bits_address[4:3]] ? _GEN_0[auto_dmi_in_a_bits_address[4:3]] : 32'h0;	// @[Cat.scala:33:92, Debug.scala:435:47, MuxLiteral.scala:49:10, RegisterRouter.scala:83:24]
  assign auto_int_out_3_0 = debugIntRegs_3 | io_hgDebugInt_3;	// @[Debug.scala:595:31, :600:60]
  assign auto_int_out_2_0 = debugIntRegs_2 | io_hgDebugInt_2;	// @[Debug.scala:595:31, :600:60]
  assign auto_int_out_1_0 = debugIntRegs_1 | io_hgDebugInt_1;	// @[Debug.scala:595:31, :600:60]
  assign auto_int_out_0_0 = debugIntRegs_0 | io_hgDebugInt_0;	// @[Debug.scala:595:31, :600:60]
  assign io_ctrl_dmactive = DMCONTROLReg_dmactive;	// @[Debug.scala:374:31]
  assign io_innerCtrl_valid = _io_innerCtrl_valid_output;	// @[Debug.scala:636:54]
  assign io_innerCtrl_bits_resumereq = _io_innerCtrl_bits_resumereq_output;	// @[Debug.scala:638:83]
  assign io_innerCtrl_bits_hartsel = _io_innerCtrl_bits_hartsel_output;	// @[Debug.scala:637:42]
  assign io_innerCtrl_bits_ackhavereset = _io_innerCtrl_bits_ackhavereset_output;	// @[Debug.scala:639:89]
  assign io_innerCtrl_bits_hasel = _io_innerCtrl_bits_hasel_output;	// @[Debug.scala:642:42]
  assign io_innerCtrl_bits_hamask_0 = hamask_0;	// @[Debug.scala:492:74, :493:44, :495:44]
  assign io_innerCtrl_bits_hamask_1 = hamask_1;	// @[Debug.scala:492:74, :493:44, :495:44]
  assign io_innerCtrl_bits_hamask_2 = hamask_2;	// @[Debug.scala:492:74, :493:44, :495:44]
  assign io_innerCtrl_bits_hamask_3 = hamask_3;	// @[Debug.scala:492:74, :493:44, :495:44]
  assign io_innerCtrl_bits_hrmask_0 = hrmaskNxt_0;	// @[Debug.scala:518:44, :519:30, :520:102, :521:30, :522:102]
  assign io_innerCtrl_bits_hrmask_1 = hrmaskNxt_1;	// @[Debug.scala:518:44, :519:30, :520:102, :521:30, :522:102]
  assign io_innerCtrl_bits_hrmask_2 = hrmaskNxt_2;	// @[Debug.scala:518:44, :519:30, :520:102, :521:30, :522:102]
  assign io_innerCtrl_bits_hrmask_3 = hrmaskNxt_3;	// @[Debug.scala:518:44, :519:30, :520:102, :521:30, :522:102]
endmodule

